{"ast":null,"code":"/**\n * User registration page with role-specific forms for creating new accounts.\n * Handles both employer and student registration with appropriate fields.\n */import React,{useState}from'react';import{useNavigate,Link}from'react-router-dom';import{authAPI}from'../services/api';import{getStatusErrorMessage}from'../utils/errorHandler';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const RegistrationPage=()=>{const[formData,setFormData]=useState({// Common fields\nrole:'student',// Default role\npassword:'',confirmPassword:'',// Student fields\nemail:'',full_name:'',phone_number:'',// Employer fields\nemployer_full_name:'',organization_name:'',organization_email:'',employer_phone_number:''});const[loading,setLoading]=useState(false);const[error,setError]=useState('');const[success,setSuccess]=useState('');const navigate=useNavigate();/**\n   * Handle form input changes\n   */const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});// Clear error when user starts typing\nif(error)setError('');};/**\n   * Handle role selection change\n   */const handleRoleChange=e=>{const newRole=e.target.value;setFormData({...formData,role:newRole,// Clear form data when switching roles\nemail:'',full_name:'',phone_number:'',employer_full_name:'',organization_name:'',organization_email:'',employer_phone_number:'',password:'',confirmPassword:''});setError('');};/**\n   * Validate form data before submission\n   */const validateForm=()=>{if(!formData.password||!formData.confirmPassword){setError('Password fields are required');return false;}if(formData.password!==formData.confirmPassword){setError('Passwords do not match');return false;}if(formData.password.length<8){setError('Password must be at least 8 characters long');return false;}if(formData.role==='student'){if(!formData.email||!formData.full_name){setError('Email and full name are required for students');return false;}// Basic email validation\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(formData.email)){setError('Please enter a valid email address');return false;}}else if(formData.role==='employer'){if(!formData.employer_full_name||!formData.organization_name||!formData.organization_email||!formData.employer_phone_number){setError('All employer fields are required');return false;}// Basic email validation\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(formData.organization_email)){setError('Please enter a valid organization email address');return false;}// Basic phone validation\nconst phoneRegex=/^[\\+]?[\\d\\s\\-\\(\\)]+$/;if(!phoneRegex.test(formData.employer_phone_number)){setError('Please enter a valid phone number');return false;}}return true;};/**\n   * Handle form submission\n   */const handleSubmit=async e=>{e.preventDefault();if(!validateForm())return;setLoading(true);setError('');try{let response;if(formData.role==='employer'){// Use employer-specific registration endpoint\nresponse=await authAPI.registerEmployer({full_name:formData.employer_full_name,organization_name:formData.organization_name,organization_email:formData.organization_email,phone_number:formData.employer_phone_number,password:formData.password});}else{// Use student registration endpoint\nresponse=await authAPI.registerStudent({email:formData.email,full_name:formData.full_name,phone_number:formData.phone_number||null,password:formData.password});}setSuccess(`${formData.role==='employer'?'Employer':'Student'} registration successful! Please log in.`);setTimeout(()=>{navigate('/login');},2000);}catch(error){console.error('Registration error:',error);setError(getStatusErrorMessage(error));}finally{setLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"auth-form\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Create Your Account\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Join our AI-powered job portal and accelerate your career\"}),error&&/*#__PURE__*/_jsx(\"div\",{className:\"error-message\",children:error}),success&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",children:success}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"role\",children:\"I am a:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"role\",name:\"role\",value:formData.role,onChange:handleRoleChange,className:\"form-select\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"student\",children:\"Student/Job Seeker\"}),/*#__PURE__*/_jsx(\"option\",{value:\"employer\",children:\"Employer/Recruiter\"})]})]}),formData.role==='student'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"full_name\",children:\"Full Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"full_name\",name:\"full_name\",value:formData.full_name,onChange:handleChange,placeholder:\"Enter your full name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email Address *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",name:\"email\",value:formData.email,onChange:handleChange,placeholder:\"Enter your email address\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"phone_number\",children:\"Phone Number (Optional)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"phone_number\",name:\"phone_number\",value:formData.phone_number,onChange:handleChange,placeholder:\"Enter your phone number\"})]})]}),formData.role==='employer'&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"employer_full_name\",children:\"Full Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"employer_full_name\",name:\"employer_full_name\",value:formData.employer_full_name,onChange:handleChange,placeholder:\"Enter your full name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"organization_name\",children:\"Organization Name *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"organization_name\",name:\"organization_name\",value:formData.organization_name,onChange:handleChange,placeholder:\"Enter your organization name\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"organization_email\",children:\"Organization Email ID *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"organization_email\",name:\"organization_email\",value:formData.organization_email,onChange:handleChange,placeholder:\"Enter your organization email\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"employer_phone_number\",children:\"Phone Number *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",id:\"employer_phone_number\",name:\"employer_phone_number\",value:formData.employer_phone_number,onChange:handleChange,placeholder:\"Enter your phone number\",required:true})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",name:\"password\",value:formData.password,onChange:handleChange,placeholder:\"Create a password (min. 8 characters)\",required:true,minLength:8})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"confirmPassword\",children:\"Confirm Password *\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"confirmPassword\",name:\"confirmPassword\",value:formData.confirmPassword,onChange:handleChange,placeholder:\"Confirm your password\",required:true,minLength:8})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,className:\"auth-button\",children:loading?'Creating Account...':`Create ${formData.role==='employer'?'Employer':'Student'} Account`})]}),/*#__PURE__*/_jsx(\"div\",{className:\"auth-links\",children:/*#__PURE__*/_jsxs(\"p\",{children:[\"Already have an account? \",/*#__PURE__*/_jsx(Link,{to:\"/login\",children:\"Sign in here\"})]})})]})});};export default RegistrationPage;","map":{"version":3,"names":["React","useState","useNavigate","Link","authAPI","getStatusErrorMessage","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","RegistrationPage","formData","setFormData","role","password","confirmPassword","email","full_name","phone_number","employer_full_name","organization_name","organization_email","employer_phone_number","loading","setLoading","error","setError","success","setSuccess","navigate","handleChange","e","target","name","value","handleRoleChange","newRole","validateForm","length","emailRegex","test","phoneRegex","handleSubmit","preventDefault","response","registerEmployer","registerStudent","setTimeout","console","className","children","onSubmit","htmlFor","id","onChange","type","placeholder","required","minLength","disabled","to"],"sources":["/Users/surajj/Desktop/JobPortal1/frontend/src/pages/RegistrationPage.js"],"sourcesContent":["/**\n * User registration page with role-specific forms for creating new accounts.\n * Handles both employer and student registration with appropriate fields.\n */\n\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { authAPI } from '../services/api';\nimport { getStatusErrorMessage } from '../utils/errorHandler';\n\nconst RegistrationPage = () => {\n  const [formData, setFormData] = useState({\n    // Common fields\n    role: 'student', // Default role\n    password: '',\n    confirmPassword: '',\n    \n    // Student fields\n    email: '',\n    full_name: '',\n    phone_number: '',\n    \n    // Employer fields\n    employer_full_name: '',\n    organization_name: '',\n    organization_email: '',\n    employer_phone_number: '',\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate();\n\n  /**\n   * Handle form input changes\n   */\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value,\n    });\n    // Clear error when user starts typing\n    if (error) setError('');\n  };\n\n  /**\n   * Handle role selection change\n   */\n  const handleRoleChange = (e) => {\n    const newRole = e.target.value;\n    setFormData({\n      ...formData,\n      role: newRole,\n      // Clear form data when switching roles\n      email: '',\n      full_name: '',\n      phone_number: '',\n      employer_full_name: '',\n      organization_name: '',\n      organization_email: '',\n      employer_phone_number: '',\n      password: '',\n      confirmPassword: ''\n    });\n    setError('');\n  };\n\n  /**\n   * Validate form data before submission\n   */\n  const validateForm = () => {\n    if (!formData.password || !formData.confirmPassword) {\n      setError('Password fields are required');\n      return false;\n    }\n\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      return false;\n    }\n\n    if (formData.password.length < 8) {\n      setError('Password must be at least 8 characters long');\n      return false;\n    }\n\n    if (formData.role === 'student') {\n      if (!formData.email || !formData.full_name) {\n        setError('Email and full name are required for students');\n        return false;\n      }\n      \n      // Basic email validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(formData.email)) {\n        setError('Please enter a valid email address');\n        return false;\n      }\n    } else if (formData.role === 'employer') {\n      if (!formData.employer_full_name || !formData.organization_name || \n          !formData.organization_email || !formData.employer_phone_number) {\n        setError('All employer fields are required');\n        return false;\n      }\n      \n      // Basic email validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(formData.organization_email)) {\n        setError('Please enter a valid organization email address');\n        return false;\n      }\n      \n      // Basic phone validation\n      const phoneRegex = /^[\\+]?[\\d\\s\\-\\(\\)]+$/;\n      if (!phoneRegex.test(formData.employer_phone_number)) {\n        setError('Please enter a valid phone number');\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  /**\n   * Handle form submission\n   */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n\n    setLoading(true);\n    setError('');\n\n    try {\n      let response;\n      \n      if (formData.role === 'employer') {\n        // Use employer-specific registration endpoint\n        response = await authAPI.registerEmployer({\n          full_name: formData.employer_full_name,\n          organization_name: formData.organization_name,\n          organization_email: formData.organization_email,\n          phone_number: formData.employer_phone_number,\n          password: formData.password\n        });\n      } else {\n        // Use student registration endpoint\n        response = await authAPI.registerStudent({\n          email: formData.email,\n          full_name: formData.full_name,\n          phone_number: formData.phone_number || null,\n          password: formData.password\n        });\n      }\n\n      setSuccess(`${formData.role === 'employer' ? 'Employer' : 'Student'} registration successful! Please log in.`);\n      setTimeout(() => {\n        navigate('/login');\n      }, 2000);\n    } catch (error) {\n      console.error('Registration error:', error);\n      setError(getStatusErrorMessage(error));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"auth-form\">\n        <h1>Create Your Account</h1>\n        <p>Join our AI-powered job portal and accelerate your career</p>\n\n        {error && <div className=\"error-message\">{error}</div>}\n        {success && <div className=\"success-message\">{success}</div>}\n\n        <form onSubmit={handleSubmit}>\n          {/* Role Selection */}\n          <div className=\"form-group\">\n            <label htmlFor=\"role\">I am a:</label>\n            <select\n              id=\"role\"\n              name=\"role\"\n              value={formData.role}\n              onChange={handleRoleChange}\n              className=\"form-select\"\n            >\n              <option value=\"student\">Student/Job Seeker</option>\n              <option value=\"employer\">Employer/Recruiter</option>\n            </select>\n          </div>\n\n          {/* Student Fields */}\n          {formData.role === 'student' && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"full_name\">Full Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"full_name\"\n                  name=\"full_name\"\n                  value={formData.full_name}\n                  onChange={handleChange}\n                  placeholder=\"Enter your full name\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email Address *</label>\n                <input\n                  type=\"email\"\n                  id=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  placeholder=\"Enter your email address\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"phone_number\">Phone Number (Optional)</label>\n                <input\n                  type=\"tel\"\n                  id=\"phone_number\"\n                  name=\"phone_number\"\n                  value={formData.phone_number}\n                  onChange={handleChange}\n                  placeholder=\"Enter your phone number\"\n                />\n              </div>\n            </>\n          )}\n\n          {/* Employer Fields */}\n          {formData.role === 'employer' && (\n            <>\n              <div className=\"form-group\">\n                <label htmlFor=\"employer_full_name\">Full Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"employer_full_name\"\n                  name=\"employer_full_name\"\n                  value={formData.employer_full_name}\n                  onChange={handleChange}\n                  placeholder=\"Enter your full name\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"organization_name\">Organization Name *</label>\n                <input\n                  type=\"text\"\n                  id=\"organization_name\"\n                  name=\"organization_name\"\n                  value={formData.organization_name}\n                  onChange={handleChange}\n                  placeholder=\"Enter your organization name\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"organization_email\">Organization Email ID *</label>\n                <input\n                  type=\"email\"\n                  id=\"organization_email\"\n                  name=\"organization_email\"\n                  value={formData.organization_email}\n                  onChange={handleChange}\n                  placeholder=\"Enter your organization email\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"employer_phone_number\">Phone Number *</label>\n                <input\n                  type=\"tel\"\n                  id=\"employer_phone_number\"\n                  name=\"employer_phone_number\"\n                  value={formData.employer_phone_number}\n                  onChange={handleChange}\n                  placeholder=\"Enter your phone number\"\n                  required\n                />\n              </div>\n            </>\n          )}\n\n          {/* Common Password Fields */}\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password *</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleChange}\n              placeholder=\"Create a password (min. 8 characters)\"\n              required\n              minLength={8}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"confirmPassword\">Confirm Password *</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              name=\"confirmPassword\"\n              value={formData.confirmPassword}\n              onChange={handleChange}\n              placeholder=\"Confirm your password\"\n              required\n              minLength={8}\n            />\n          </div>\n\n          <button type=\"submit\" disabled={loading} className=\"auth-button\">\n            {loading ? 'Creating Account...' : `Create ${formData.role === 'employer' ? 'Employer' : 'Student'} Account`}\n          </button>\n        </form>\n\n        <div className=\"auth-links\">\n          <p>\n            Already have an account? <Link to=\"/login\">Sign in here</Link>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}