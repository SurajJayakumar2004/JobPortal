{"ast":null,"code":"/**\n * Student Insights API Service\n * \n * Handles API calls for personalized student career insights,\n * resume analysis, and skill recommendations.\n */\n\nimport axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8001';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000,\n  // 30 seconds for file uploads\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add auth token to requests\napiClient.interceptors.request.use(config => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(response => response, error => {\n  var _error$response;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n  return Promise.reject(error);\n});\nconst studentInsightsAPI = {\n  /**\n   * Analyze a student's resume and generate personalized insights\n   */\n  analyzeResume: async formData => {\n    try {\n      const response = await apiClient.post('/api/student-insights/analyze-resume', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error analyzing resume:', error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Failed to analyze resume. Please try again.');\n    }\n  },\n  /**\n   * Generate quick career assessment based on user inputs\n   */\n  quickAssessment: async assessmentData => {\n    try {\n      const response = await apiClient.post('/api/student-insights/quick-assessment', assessmentData);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error in quick assessment:', error);\n      throw new Error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to generate career assessment. Please try again.');\n    }\n  },\n  /**\n   * Get skill recommendations for a target role\n   */\n  getSkillRecommendations: async (targetRole, currentSkills = '') => {\n    try {\n      const params = {\n        current_skills: currentSkills\n      };\n      const response = await apiClient.get(`/api/student-insights/skill-recommendations/${encodeURIComponent(targetRole)}`, {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error getting skill recommendations:', error);\n      throw new Error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.detail) || 'Failed to get skill recommendations. Please try again.');\n    }\n  },\n  /**\n   * Get personalized career paths\n   */\n  getCareerPaths: async (industry = '', experienceLevel = 'entry') => {\n    try {\n      const params = {\n        industry: industry,\n        experience_level: experienceLevel\n      };\n      const response = await apiClient.get('/api/student-insights/career-paths', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error getting career paths:', error);\n      throw new Error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.detail) || 'Failed to get career paths. Please try again.');\n    }\n  },\n  /**\n   * Get market insights and trends\n   */\n  getMarketInsights: async (skills = '', industry = '') => {\n    try {\n      const params = {\n        skills: skills,\n        industry: industry\n      };\n      const response = await apiClient.get('/api/student-insights/market-insights', {\n        params\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response6, _error$response6$data;\n      console.error('Error getting market insights:', error);\n      throw new Error(((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.detail) || 'Failed to get market insights. Please try again.');\n    }\n  },\n  /**\n   * Generate mock personalized insights for demo purposes\n   */\n  generateMockInsights: async userData => {\n    // This creates realistic mock data for demonstration\n    return new Promise(resolve => {\n      setTimeout(() => {\n        var _userData$skills, _userData$skills2, _userData$skills3, _userData$skills4, _userData$experience, _userData$experience2, _userData$experience3, _userData$experience4, _userData$education, _userData$education2, _userData$education3, _userData$education4, _userData$experience5;\n        const mockInsights = {\n          success: true,\n          personalized_insights: {\n            student_id: userData.id || 'demo_student',\n            generated_on: new Date().toISOString(),\n            student_profile: {\n              skills: {\n                technical: ((_userData$skills = userData.skills) === null || _userData$skills === void 0 ? void 0 : _userData$skills.technical) || ['JavaScript', 'Python', 'React', 'SQL'],\n                soft: ((_userData$skills2 = userData.skills) === null || _userData$skills2 === void 0 ? void 0 : _userData$skills2.soft) || ['Communication', 'Problem Solving', 'Teamwork'],\n                tools: ((_userData$skills3 = userData.skills) === null || _userData$skills3 === void 0 ? void 0 : _userData$skills3.tools) || ['Git', 'VS Code', 'Excel'],\n                languages: ((_userData$skills4 = userData.skills) === null || _userData$skills4 === void 0 ? void 0 : _userData$skills4.languages) || ['English', 'Spanish']\n              },\n              experience: {\n                work_experience: ((_userData$experience = userData.experience) === null || _userData$experience === void 0 ? void 0 : _userData$experience.work) || ['Software Development Intern at TechCorp'],\n                internships: ((_userData$experience2 = userData.experience) === null || _userData$experience2 === void 0 ? void 0 : _userData$experience2.internships) || ['Summer Internship 2023'],\n                projects: ((_userData$experience3 = userData.experience) === null || _userData$experience3 === void 0 ? void 0 : _userData$experience3.projects) || ['E-commerce Website', 'Data Analysis Dashboard'],\n                total_years: ((_userData$experience4 = userData.experience) === null || _userData$experience4 === void 0 ? void 0 : _userData$experience4.years) || 1\n              },\n              education: {\n                degrees: ((_userData$education = userData.education) === null || _userData$education === void 0 ? void 0 : _userData$education.degrees) || ['Bachelor of Science in Computer Science'],\n                certifications: ((_userData$education2 = userData.education) === null || _userData$education2 === void 0 ? void 0 : _userData$education2.certifications) || ['AWS Cloud Practitioner'],\n                gpa: ((_userData$education3 = userData.education) === null || _userData$education3 === void 0 ? void 0 : _userData$education3.gpa) || 3.7,\n                relevant_coursework: ((_userData$education4 = userData.education) === null || _userData$education4 === void 0 ? void 0 : _userData$education4.coursework) || ['Data Structures', 'Algorithms', 'Database Systems']\n              },\n              experience_level: ((_userData$experience5 = userData.experience) === null || _userData$experience5 === void 0 ? void 0 : _userData$experience5.level) || 'junior'\n            },\n            professional_insights: {\n              strengths: ['Strong technical foundation with 4 technical skills identified', 'Well-developed soft skills including Communication, Problem Solving, Teamwork', 'Practical experience through 1 internship(s)', 'Professional certifications: AWS Cloud Practitioner'],\n              areas_for_improvement: ['Consider obtaining additional industry-relevant certifications', 'Expand technical skill set with emerging technologies'],\n              market_position: 'Competitive entry-level candidate with good preparation for the job market',\n              competitive_advantages: ['High-demand skills: JavaScript, Python, SQL', 'Multilingual abilities: English, Spanish'],\n              industry_readiness: {\n                Technology: {\n                  readiness_score: 78.5,\n                  matching_skills: ['programming', 'problem-solving'],\n                  missing_skills: ['version control', 'testing']\n                }\n              },\n              recommendations: ['Focus on developing 2-3 additional technical skills relevant to your target industry', 'Build a portfolio with 2-3 personal projects to demonstrate your skills']\n            },\n            career_recommendations: {\n              immediate_opportunities: [{\n                role: 'Junior Software Developer',\n                industry: 'Technology',\n                match_reason: 'Aligns with your junior-level profile and Technology interest',\n                required_preparation: ['Build coding portfolio', 'Practice coding interviews', 'Learn additional frameworks']\n              }, {\n                role: 'Frontend Developer',\n                industry: 'Technology',\n                match_reason: 'Your JavaScript and React skills are well-suited for this role',\n                required_preparation: ['Master modern frontend frameworks', 'Learn UI/UX principles']\n              }],\n              short_term_goals: ['Transition to a full-time role with increased responsibilities', 'Specialize in a particular technology stack or domain', 'Build leadership experience through project management', 'Expand professional network through industry events'],\n              long_term_vision: ['Progress to Software Engineer or similar role in Technology', 'Develop expertise in emerging technologies like AI/ML'],\n              recommended_next_steps: ['Build a portfolio with personal projects', 'Apply for internships to gain practical experience'],\n              growth_trajectory: [{\n                industry: 'Technology',\n                entry_level: 'Junior Software Developer',\n                mid_level: 'Software Engineer',\n                senior_level: 'Senior Software Engineer',\n                timeline: 'Typically 2-3 years between levels with consistent skill development'\n              }]\n            },\n            skill_breakdown: {\n              current_skills_analysis: {\n                technical_skills_count: 4,\n                soft_skills_count: 3,\n                strongest_technical_areas: ['JavaScript', 'Python', 'React'],\n                strongest_soft_skills: ['Communication', 'Problem Solving', 'Teamwork'],\n                total_skills: 7\n              },\n              skill_strength_areas: ['High-demand technical skills: JavaScript, Python, SQL', 'Strong soft skill foundation with 3 identified skills'],\n              skill_development_areas: ['Missing high-demand skills: machine learning, cloud computing'],\n              industry_skill_gaps: {\n                Technology: ['version control', 'testing', 'databases']\n              },\n              skill_recommendations: ['Develop 2-3 additional programming languages or frameworks', 'Consider learning data analysis or database management skills', 'Explore cloud computing platforms (AWS, Azure, or GCP)'],\n              learning_path_suggestions: [{\n                path: 'Full-Stack Development',\n                skills: ['HTML/CSS', 'JavaScript', 'React', 'Node.js', 'Databases'],\n                timeline: '3-6 months',\n                resources: ['freeCodeCamp', 'The Odin Project', 'Codecademy']\n              }]\n            },\n            suggested_career_paths: [{\n              title: 'Software Development Career Path',\n              description: 'Progress from junior developer to senior engineer or architect',\n              stages: [{\n                level: 'Entry (0-2 years)',\n                roles: ['Junior Developer', 'Software Developer I'],\n                skills_needed: ['Programming fundamentals', 'Version control', 'Testing'],\n                salary_range: '$50,000 - $75,000'\n              }, {\n                level: 'Mid (2-5 years)',\n                roles: ['Software Engineer', 'Full Stack Developer'],\n                skills_needed: ['Advanced programming', 'System design', 'Database management'],\n                salary_range: '$75,000 - $120,000'\n              }, {\n                level: 'Senior (5+ years)',\n                roles: ['Senior Engineer', 'Tech Lead', 'Software Architect'],\n                skills_needed: ['Leadership', 'Architecture design', 'Mentoring'],\n                salary_range: '$120,000 - $200,000+'\n              }],\n              personalization_note: 'Your JavaScript, Python skills provide a strong foundation for this path'\n            }],\n            priority_skills_to_develop: {\n              immediate_priority: [{\n                skill: 'Programming Fundamentals',\n                reason: 'Essential foundation for technology careers',\n                learning_time: '2-3 months',\n                resources: ['Codecademy', 'freeCodeCamp', 'Python.org tutorial']\n              }],\n              short_term_priority: [{\n                skill: 'Version Control',\n                reason: 'Key requirement for Technology industry',\n                learning_time: '3-6 months',\n                industry_relevance: 'Technology'\n              }, {\n                skill: 'Cloud Computing',\n                reason: 'High market demand across industries',\n                learning_time: '3-6 months',\n                market_demand: 'High'\n              }],\n              long_term_priority: [{\n                skill: 'Machine Learning',\n                reason: 'Emerging technology with future growth potential',\n                learning_time: '6-12 months',\n                future_potential: 'High'\n              }],\n              skill_learning_plan: [{\n                order: 1,\n                skill: 'Programming Fundamentals',\n                timeline: '2-3 months',\n                priority_level: 'High',\n                recommended_approach: 'Hands-on coding with projects and practice problems'\n              }, {\n                order: 2,\n                skill: 'Version Control',\n                timeline: '3-6 months',\n                priority_level: 'High',\n                recommended_approach: 'Practice with Git through real projects'\n              }],\n              recommended_certifications: ['AWS Cloud Practitioner', 'Google IT Support Certificate']\n            },\n            personalization_score: 85.0\n          },\n          analysis_timestamp: new Date().toISOString(),\n          filename: userData.filename || 'demo_resume.pdf'\n        };\n        resolve(mockInsights);\n      }, 2000); // Simulate API delay\n    });\n  }\n};\nexport default studentInsightsAPI;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","apiClient","create","baseURL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","console","data","message","studentInsightsAPI","analyzeResume","formData","post","_error$response2","_error$response2$data","Error","detail","quickAssessment","assessmentData","_error$response3","_error$response3$data","getSkillRecommendations","targetRole","currentSkills","params","current_skills","get","encodeURIComponent","_error$response4","_error$response4$data","getCareerPaths","industry","experienceLevel","experience_level","_error$response5","_error$response5$data","getMarketInsights","skills","_error$response6","_error$response6$data","generateMockInsights","userData","resolve","setTimeout","_userData$skills","_userData$skills2","_userData$skills3","_userData$skills4","_userData$experience","_userData$experience2","_userData$experience3","_userData$experience4","_userData$education","_userData$education2","_userData$education3","_userData$education4","_userData$experience5","mockInsights","success","personalized_insights","student_id","id","generated_on","Date","toISOString","student_profile","technical","soft","tools","languages","experience","work_experience","work","internships","projects","total_years","years","education","degrees","certifications","gpa","relevant_coursework","coursework","level","professional_insights","strengths","areas_for_improvement","market_position","competitive_advantages","industry_readiness","Technology","readiness_score","matching_skills","missing_skills","recommendations","career_recommendations","immediate_opportunities","role","match_reason","required_preparation","short_term_goals","long_term_vision","recommended_next_steps","growth_trajectory","entry_level","mid_level","senior_level","timeline","skill_breakdown","current_skills_analysis","technical_skills_count","soft_skills_count","strongest_technical_areas","strongest_soft_skills","total_skills","skill_strength_areas","skill_development_areas","industry_skill_gaps","skill_recommendations","learning_path_suggestions","path","resources","suggested_career_paths","title","description","stages","roles","skills_needed","salary_range","personalization_note","priority_skills_to_develop","immediate_priority","skill","reason","learning_time","short_term_priority","industry_relevance","market_demand","long_term_priority","future_potential","skill_learning_plan","order","priority_level","recommended_approach","recommended_certifications","personalization_score","analysis_timestamp","filename"],"sources":["/Users/surajj/Desktop/JobPortal1/frontend/src/services/studentInsightsAPI.js"],"sourcesContent":["/**\n * Student Insights API Service\n * \n * Handles API calls for personalized student career insights,\n * resume analysis, and skill recommendations.\n */\n\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8001';\n\n// Create axios instance with default config\nconst apiClient = axios.create({\n  baseURL: API_BASE_URL,\n  timeout: 30000, // 30 seconds for file uploads\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Add auth token to requests\napiClient.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for error handling\napiClient.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\nconst studentInsightsAPI = {\n  /**\n   * Analyze a student's resume and generate personalized insights\n   */\n  analyzeResume: async (formData) => {\n    try {\n      const response = await apiClient.post('/api/student-insights/analyze-resume', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error analyzing resume:', error);\n      throw new Error(\n        error.response?.data?.detail || \n        'Failed to analyze resume. Please try again.'\n      );\n    }\n  },\n\n  /**\n   * Generate quick career assessment based on user inputs\n   */\n  quickAssessment: async (assessmentData) => {\n    try {\n      const response = await apiClient.post('/api/student-insights/quick-assessment', assessmentData);\n      return response.data;\n    } catch (error) {\n      console.error('Error in quick assessment:', error);\n      throw new Error(\n        error.response?.data?.detail || \n        'Failed to generate career assessment. Please try again.'\n      );\n    }\n  },\n\n  /**\n   * Get skill recommendations for a target role\n   */\n  getSkillRecommendations: async (targetRole, currentSkills = '') => {\n    try {\n      const params = { current_skills: currentSkills };\n      const response = await apiClient.get(`/api/student-insights/skill-recommendations/${encodeURIComponent(targetRole)}`, { params });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting skill recommendations:', error);\n      throw new Error(\n        error.response?.data?.detail || \n        'Failed to get skill recommendations. Please try again.'\n      );\n    }\n  },\n\n  /**\n   * Get personalized career paths\n   */\n  getCareerPaths: async (industry = '', experienceLevel = 'entry') => {\n    try {\n      const params = { \n        industry: industry,\n        experience_level: experienceLevel \n      };\n      const response = await apiClient.get('/api/student-insights/career-paths', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting career paths:', error);\n      throw new Error(\n        error.response?.data?.detail || \n        'Failed to get career paths. Please try again.'\n      );\n    }\n  },\n\n  /**\n   * Get market insights and trends\n   */\n  getMarketInsights: async (skills = '', industry = '') => {\n    try {\n      const params = { \n        skills: skills,\n        industry: industry \n      };\n      const response = await apiClient.get('/api/student-insights/market-insights', { params });\n      return response.data;\n    } catch (error) {\n      console.error('Error getting market insights:', error);\n      throw new Error(\n        error.response?.data?.detail || \n        'Failed to get market insights. Please try again.'\n      );\n    }\n  },\n\n  /**\n   * Generate mock personalized insights for demo purposes\n   */\n  generateMockInsights: async (userData) => {\n    // This creates realistic mock data for demonstration\n    return new Promise((resolve) => {\n      setTimeout(() => {\n        const mockInsights = {\n          success: true,\n          personalized_insights: {\n            student_id: userData.id || 'demo_student',\n            generated_on: new Date().toISOString(),\n            student_profile: {\n              skills: {\n                technical: userData.skills?.technical || ['JavaScript', 'Python', 'React', 'SQL'],\n                soft: userData.skills?.soft || ['Communication', 'Problem Solving', 'Teamwork'],\n                tools: userData.skills?.tools || ['Git', 'VS Code', 'Excel'],\n                languages: userData.skills?.languages || ['English', 'Spanish']\n              },\n              experience: {\n                work_experience: userData.experience?.work || ['Software Development Intern at TechCorp'],\n                internships: userData.experience?.internships || ['Summer Internship 2023'],\n                projects: userData.experience?.projects || ['E-commerce Website', 'Data Analysis Dashboard'],\n                total_years: userData.experience?.years || 1\n              },\n              education: {\n                degrees: userData.education?.degrees || ['Bachelor of Science in Computer Science'],\n                certifications: userData.education?.certifications || ['AWS Cloud Practitioner'],\n                gpa: userData.education?.gpa || 3.7,\n                relevant_coursework: userData.education?.coursework || ['Data Structures', 'Algorithms', 'Database Systems']\n              },\n              experience_level: userData.experience?.level || 'junior'\n            },\n            professional_insights: {\n              strengths: [\n                'Strong technical foundation with 4 technical skills identified',\n                'Well-developed soft skills including Communication, Problem Solving, Teamwork',\n                'Practical experience through 1 internship(s)',\n                'Professional certifications: AWS Cloud Practitioner'\n              ],\n              areas_for_improvement: [\n                'Consider obtaining additional industry-relevant certifications',\n                'Expand technical skill set with emerging technologies'\n              ],\n              market_position: 'Competitive entry-level candidate with good preparation for the job market',\n              competitive_advantages: [\n                'High-demand skills: JavaScript, Python, SQL',\n                'Multilingual abilities: English, Spanish'\n              ],\n              industry_readiness: {\n                Technology: {\n                  readiness_score: 78.5,\n                  matching_skills: ['programming', 'problem-solving'],\n                  missing_skills: ['version control', 'testing']\n                }\n              },\n              recommendations: [\n                'Focus on developing 2-3 additional technical skills relevant to your target industry',\n                'Build a portfolio with 2-3 personal projects to demonstrate your skills'\n              ]\n            },\n            career_recommendations: {\n              immediate_opportunities: [\n                {\n                  role: 'Junior Software Developer',\n                  industry: 'Technology',\n                  match_reason: 'Aligns with your junior-level profile and Technology interest',\n                  required_preparation: ['Build coding portfolio', 'Practice coding interviews', 'Learn additional frameworks']\n                },\n                {\n                  role: 'Frontend Developer',\n                  industry: 'Technology',\n                  match_reason: 'Your JavaScript and React skills are well-suited for this role',\n                  required_preparation: ['Master modern frontend frameworks', 'Learn UI/UX principles']\n                }\n              ],\n              short_term_goals: [\n                'Transition to a full-time role with increased responsibilities',\n                'Specialize in a particular technology stack or domain',\n                'Build leadership experience through project management',\n                'Expand professional network through industry events'\n              ],\n              long_term_vision: [\n                'Progress to Software Engineer or similar role in Technology',\n                'Develop expertise in emerging technologies like AI/ML'\n              ],\n              recommended_next_steps: [\n                'Build a portfolio with personal projects',\n                'Apply for internships to gain practical experience'\n              ],\n              growth_trajectory: [\n                {\n                  industry: 'Technology',\n                  entry_level: 'Junior Software Developer',\n                  mid_level: 'Software Engineer',\n                  senior_level: 'Senior Software Engineer',\n                  timeline: 'Typically 2-3 years between levels with consistent skill development'\n                }\n              ]\n            },\n            skill_breakdown: {\n              current_skills_analysis: {\n                technical_skills_count: 4,\n                soft_skills_count: 3,\n                strongest_technical_areas: ['JavaScript', 'Python', 'React'],\n                strongest_soft_skills: ['Communication', 'Problem Solving', 'Teamwork'],\n                total_skills: 7\n              },\n              skill_strength_areas: [\n                'High-demand technical skills: JavaScript, Python, SQL',\n                'Strong soft skill foundation with 3 identified skills'\n              ],\n              skill_development_areas: [\n                'Missing high-demand skills: machine learning, cloud computing'\n              ],\n              industry_skill_gaps: {\n                Technology: ['version control', 'testing', 'databases']\n              },\n              skill_recommendations: [\n                'Develop 2-3 additional programming languages or frameworks',\n                'Consider learning data analysis or database management skills',\n                'Explore cloud computing platforms (AWS, Azure, or GCP)'\n              ],\n              learning_path_suggestions: [\n                {\n                  path: 'Full-Stack Development',\n                  skills: ['HTML/CSS', 'JavaScript', 'React', 'Node.js', 'Databases'],\n                  timeline: '3-6 months',\n                  resources: ['freeCodeCamp', 'The Odin Project', 'Codecademy']\n                }\n              ]\n            },\n            suggested_career_paths: [\n              {\n                title: 'Software Development Career Path',\n                description: 'Progress from junior developer to senior engineer or architect',\n                stages: [\n                  {\n                    level: 'Entry (0-2 years)',\n                    roles: ['Junior Developer', 'Software Developer I'],\n                    skills_needed: ['Programming fundamentals', 'Version control', 'Testing'],\n                    salary_range: '$50,000 - $75,000'\n                  },\n                  {\n                    level: 'Mid (2-5 years)',\n                    roles: ['Software Engineer', 'Full Stack Developer'],\n                    skills_needed: ['Advanced programming', 'System design', 'Database management'],\n                    salary_range: '$75,000 - $120,000'\n                  },\n                  {\n                    level: 'Senior (5+ years)',\n                    roles: ['Senior Engineer', 'Tech Lead', 'Software Architect'],\n                    skills_needed: ['Leadership', 'Architecture design', 'Mentoring'],\n                    salary_range: '$120,000 - $200,000+'\n                  }\n                ],\n                personalization_note: 'Your JavaScript, Python skills provide a strong foundation for this path'\n              }\n            ],\n            priority_skills_to_develop: {\n              immediate_priority: [\n                {\n                  skill: 'Programming Fundamentals',\n                  reason: 'Essential foundation for technology careers',\n                  learning_time: '2-3 months',\n                  resources: ['Codecademy', 'freeCodeCamp', 'Python.org tutorial']\n                }\n              ],\n              short_term_priority: [\n                {\n                  skill: 'Version Control',\n                  reason: 'Key requirement for Technology industry',\n                  learning_time: '3-6 months',\n                  industry_relevance: 'Technology'\n                },\n                {\n                  skill: 'Cloud Computing',\n                  reason: 'High market demand across industries',\n                  learning_time: '3-6 months',\n                  market_demand: 'High'\n                }\n              ],\n              long_term_priority: [\n                {\n                  skill: 'Machine Learning',\n                  reason: 'Emerging technology with future growth potential',\n                  learning_time: '6-12 months',\n                  future_potential: 'High'\n                }\n              ],\n              skill_learning_plan: [\n                {\n                  order: 1,\n                  skill: 'Programming Fundamentals',\n                  timeline: '2-3 months',\n                  priority_level: 'High',\n                  recommended_approach: 'Hands-on coding with projects and practice problems'\n                },\n                {\n                  order: 2,\n                  skill: 'Version Control',\n                  timeline: '3-6 months',\n                  priority_level: 'High',\n                  recommended_approach: 'Practice with Git through real projects'\n                }\n              ],\n              recommended_certifications: ['AWS Cloud Practitioner', 'Google IT Support Certificate']\n            },\n            personalization_score: 85.0\n          },\n          analysis_timestamp: new Date().toISOString(),\n          filename: userData.filename || 'demo_resume.pdf'\n        };\n        \n        resolve(mockInsights);\n      }, 2000); // Simulate API delay\n    });\n  }\n};\n\nexport default studentInsightsAPI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}