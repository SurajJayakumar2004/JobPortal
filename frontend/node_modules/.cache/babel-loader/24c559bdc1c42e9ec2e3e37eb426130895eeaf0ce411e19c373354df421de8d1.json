{"ast":null,"code":"var _jsxFileName = \"/Users/surajj/Desktop/JobPortal1/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n/**\n * Authentication context for managing user authentication state\n * throughout the application.\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { userAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user profile\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Fetch user profile data from API\n   */\n  const fetchUserProfile = async () => {\n    try {\n      const response = await userAPI.getProfile();\n      const {\n        data\n      } = response.data; // Backend wraps response in { success: true, data: {...} }\n      setUser(data.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Login user and store authentication token\n   * @param {string} token - JWT token from login response\n   * @param {Object} userData - User data from login response\n   */\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  /**\n   * Logout user and clear authentication data\n   */\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    logout,\n    fetchUserProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"xBgiRagNfQVCfEr2dT2PptfN+TE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","userAPI","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","fetchUserProfile","response","getProfile","data","error","console","removeItem","login","userData","setItem","logout","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/surajj/Desktop/JobPortal1/frontend/src/contexts/AuthContext.js"],"sourcesContent":["/**\n * Authentication context for managing user authentication state\n * throughout the application.\n */\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { userAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  // Check if user is authenticated on app load\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Verify token and get user profile\n      fetchUserProfile();\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  /**\n   * Fetch user profile data from API\n   */\n  const fetchUserProfile = async () => {\n    try {\n      const response = await userAPI.getProfile();\n      const { data } = response.data; // Backend wraps response in { success: true, data: {...} }\n      setUser(data.user);\n      setIsAuthenticated(true);\n    } catch (error) {\n      console.error('Failed to fetch user profile:', error);\n      localStorage.removeItem('token');\n      setIsAuthenticated(false);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  /**\n   * Login user and store authentication token\n   * @param {string} token - JWT token from login response\n   * @param {Object} userData - User data from login response\n   */\n  const login = (token, userData) => {\n    localStorage.setItem('token', token);\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n\n  /**\n   * Logout user and clear authentication data\n   */\n  const logout = () => {\n    localStorage.removeItem('token');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const value = {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    logout,\n    fetchUserProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,OAAO,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGT,UAAU,CAACM,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIF,KAAK,EAAE;MACT;MACAG,gBAAgB,CAAC,CAAC;IACpB,CAAC,MAAM;MACLN,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;AACF;AACA;EACE,MAAMM,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,OAAO,CAACsB,UAAU,CAAC,CAAC;MAC3C,MAAM;QAAEC;MAAK,CAAC,GAAGF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAChCX,OAAO,CAACW,IAAI,CAACZ,IAAI,CAAC;MAClBK,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDN,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;MAChCV,kBAAkB,CAAC,KAAK,CAAC;IAC3B,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;AACF;AACA;AACA;AACA;EACE,MAAMa,KAAK,GAAGA,CAACV,KAAK,EAAEW,QAAQ,KAAK;IACjCV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACpCL,OAAO,CAACgB,QAAQ,CAAC;IACjBZ,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;AACF;AACA;EACE,MAAMc,MAAM,GAAGA,CAAA,KAAM;IACnBZ,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChCd,OAAO,CAAC,IAAI,CAAC;IACbI,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMe,KAAK,GAAG;IACZpB,IAAI;IACJE,OAAO;IACPE,eAAe;IACfY,KAAK;IACLG,MAAM;IACNV;EACF,CAAC;EAED,oBACElB,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAtB,QAAA,EAChCA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC1B,GAAA,CApEWF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}